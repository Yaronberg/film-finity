// <auto-generated />
using Entities.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Entities.Migrations
{
    [DbContext(typeof(FilmFinityDbContext))]
    [Migration("20200523231713_InitAndSeed")]
    partial class InitAndSeed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Entities.Models.CelebrityJobTitles", b =>
                {
                    b.Property<int>("CelebrityId")
                        .HasColumnType("int");

                    b.Property<int>("JobTitleId")
                        .HasColumnType("int");

                    b.HasKey("CelebrityId", "JobTitleId");

                    b.HasIndex("JobTitleId");

                    b.ToTable("CelebrityJobTitles");

                    b.HasData(
                        new
                        {
                            CelebrityId = -1,
                            JobTitleId = 1
                        },
                        new
                        {
                            CelebrityId = -2,
                            JobTitleId = 1
                        },
                        new
                        {
                            CelebrityId = -2,
                            JobTitleId = 4
                        },
                        new
                        {
                            CelebrityId = -3,
                            JobTitleId = 1
                        },
                        new
                        {
                            CelebrityId = -3,
                            JobTitleId = 4
                        },
                        new
                        {
                            CelebrityId = -4,
                            JobTitleId = 1
                        },
                        new
                        {
                            CelebrityId = -4,
                            JobTitleId = 2
                        },
                        new
                        {
                            CelebrityId = -4,
                            JobTitleId = 4
                        },
                        new
                        {
                            CelebrityId = -5,
                            JobTitleId = 1
                        },
                        new
                        {
                            CelebrityId = -5,
                            JobTitleId = 4
                        },
                        new
                        {
                            CelebrityId = -6,
                            JobTitleId = 1
                        },
                        new
                        {
                            CelebrityId = -6,
                            JobTitleId = 4
                        },
                        new
                        {
                            CelebrityId = -7,
                            JobTitleId = 1
                        },
                        new
                        {
                            CelebrityId = -7,
                            JobTitleId = 2
                        },
                        new
                        {
                            CelebrityId = -7,
                            JobTitleId = 3
                        },
                        new
                        {
                            CelebrityId = -7,
                            JobTitleId = 4
                        },
                        new
                        {
                            CelebrityId = -8,
                            JobTitleId = 5
                        },
                        new
                        {
                            CelebrityId = -9,
                            JobTitleId = 6
                        },
                        new
                        {
                            CelebrityId = -10,
                            JobTitleId = 1
                        },
                        new
                        {
                            CelebrityId = -10,
                            JobTitleId = 2
                        },
                        new
                        {
                            CelebrityId = -10,
                            JobTitleId = 3
                        },
                        new
                        {
                            CelebrityId = -10,
                            JobTitleId = 4
                        });
                });

            modelBuilder.Entity("WebAPI.Models.Celebrity", b =>
                {
                    b.Property<int>("CelebrityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CountViews")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageSource")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CelebrityId");

                    b.ToTable("Celebrities");

                    b.HasData(
                        new
                        {
                            CelebrityId = -1,
                            CountViews = 134000,
                            FirstName = "Хью",
                            ImageSource = "StaticFiles/images/1.jpg",
                            LastName = "Джекман"
                        },
                        new
                        {
                            CelebrityId = -2,
                            CountViews = 127000,
                            FirstName = "Райан",
                            ImageSource = "StaticFiles/images/2.jpg",
                            LastName = "Рейнольдс"
                        },
                        new
                        {
                            CelebrityId = -3,
                            CountViews = 126000,
                            FirstName = "Роберт",
                            ImageSource = "StaticFiles/images/3.jpg",
                            LastName = "Дауни (младший)"
                        },
                        new
                        {
                            CelebrityId = -4,
                            CountViews = 121000,
                            FirstName = "Уилл",
                            ImageSource = "StaticFiles/images/4.jpg",
                            LastName = "Смит"
                        },
                        new
                        {
                            CelebrityId = -5,
                            CountViews = 120500,
                            FirstName = "Брэд",
                            ImageSource = "StaticFiles/images/5.jpg",
                            LastName = "Питт"
                        },
                        new
                        {
                            CelebrityId = -6,
                            CountViews = 120000,
                            FirstName = "Леонардо",
                            ImageSource = "StaticFiles/images/6.jpg",
                            LastName = "Ди Каприо"
                        },
                        new
                        {
                            CelebrityId = -7,
                            CountViews = 91000,
                            FirstName = "Натали",
                            ImageSource = "StaticFiles/images/7.jpg",
                            LastName = "Портман"
                        },
                        new
                        {
                            CelebrityId = -8,
                            CountViews = 20000,
                            FirstName = "Роджер",
                            ImageSource = "StaticFiles/images/8.jpg",
                            LastName = "Дикинс"
                        },
                        new
                        {
                            CelebrityId = -9,
                            CountViews = 50000,
                            FirstName = "Ханс",
                            ImageSource = "StaticFiles/images/9.jpg",
                            LastName = "Циммер"
                        },
                        new
                        {
                            CelebrityId = -10,
                            CountViews = 95000,
                            FirstName = "Квентин",
                            ImageSource = "StaticFiles/images/10.jpg",
                            LastName = "Тарантино"
                        });
                });

            modelBuilder.Entity("WebAPI.Models.JobTitle", b =>
                {
                    b.Property<int>("JobTitleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("JobName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("JobTitleId");

                    b.ToTable("JobTitles");

                    b.HasData(
                        new
                        {
                            JobTitleId = 1,
                            JobName = "актер"
                        },
                        new
                        {
                            JobTitleId = 2,
                            JobName = "режиссер"
                        },
                        new
                        {
                            JobTitleId = 3,
                            JobName = "сценарист"
                        },
                        new
                        {
                            JobTitleId = 4,
                            JobName = "продюсер"
                        },
                        new
                        {
                            JobTitleId = 5,
                            JobName = "оператор"
                        },
                        new
                        {
                            JobTitleId = 6,
                            JobName = "композитор"
                        });
                });

            modelBuilder.Entity("Entities.Models.CelebrityJobTitles", b =>
                {
                    b.HasOne("WebAPI.Models.Celebrity", "Celebrity")
                        .WithMany("CelebrityJobTitles")
                        .HasForeignKey("CelebrityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebAPI.Models.JobTitle", "JobTitle")
                        .WithMany("CelebrityJobTitles")
                        .HasForeignKey("JobTitleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
